<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4aac8cbf-69aa-4f50-af34-2cad67290c12" created="2.4.0" activeEnvironment="Default environment" name="Project 2" resourceRoot="" compositeProjectFormat="1.3" updated="2.4.0 2018-06-08T12:50:23Z" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="4aac8cbf-69aa-4f50-af34-2cad67290c12fileName">Project-2</con:setting>
  </con:settings>
  <con:testSuite id="8295db1b-8a0e-4c90-872a-7560f6b7c96c" name="TestSuite 1">
    <con:settings>
      <con:setting id="8295db1b-8a0e-4c90-872a-7560f6b7c96cfileName">TestSuite-1</con:setting>
    </con:settings>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
